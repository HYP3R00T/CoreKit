name: PyPI Publish

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Run tests
        run: |
          poetry run pytest # Adjust the command if needed based on your test setup

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Build and publish
        env:
          POETRY_PYPI_TOKEN: ${{ secrets.POETRY_PYPI_TOKEN }}
        run: |
          poetry version patch
          poetry build
          poetry publish --username __token__ --password $POETRY_PYPI_TOKEN

      - name: Commit version change
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pyproject.toml
          git commit -m "chore: Bump version to $(poetry version --short)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
